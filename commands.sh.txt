# Below are the commands that are used thru out the project


# Run below command from current directory in order to install symfony framework
cd ./api/
composer create-project symfony/framework-standard-edition . "3.4.*"

# clear the cache
docker-compose run php bin/console cache:clear

# create the database doctrine migrations
docker-compose run php /bin/sh
COMPOSER_MEMORY_LIMIT=-1 composer require doctrine/doctrine-migrations-bundle "^1.3"


# generate entities AppBundle:Product
docker-compose exec php bin/console doctrine:generate:entity

# run the migrations
docker-compose exec php bin/console doctrine:migrations:diff
docker-compose exec php bin/console doctrine:migrations:migrate


# add fixtures for database data development purposes
docker-compose exec php /bin/bash
COMPOSER_MEMORY_LIMIT=-1 composer require --dev doctrine/doctrine-fixtures-bundle

docker-compose exec php bin/console doctrine:fixtures:load

# install FOSRestBundle packages which aid in view response format and auto decode json to doctrine entity
# below package makes it easy to write restful end points with symfony.
docker-compose exec php /bin/bash
COMPOSER_MEMORY_LIMIT=-1 composer require friendsofsymfony/rest-bundle
COMPOSER_MEMORY_LIMIT=-1 composer require jms/serializer-bundle
# COMPOSER_MEMORY_LIMIT=-1 composer require willdurand/hateoas-bundle
# COMPOSER_MEMORY_LIMIT=-1 composer remove willdurand/hateoas-bundle


# view automatic generated routes
docker-compose exec php bin/console debug:router

# clear the cache
docker-compose exec php bin/console cache:clear

# drop the database 
docker-compose exec php bin/console doctrine:schema:drop --force